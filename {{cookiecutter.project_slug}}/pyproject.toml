[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
authors = [{ name = "{{ cookiecutter.full_name }}", email = "{{ cookiecutter.email }}" }]
description = "{{ cookiecutter.project_short_description }}"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "click>=8",
    "numpy>=1.24",
    "rich-click>=1.6",
]

[project.optional-dependencies]
dev = [
    "black>=23.3",
    "myst-parser>=2",
    "nox>=2022.11",
    "pre-commit>=3",
    "pydata-sphinx-theme>=0.13",
    "pytest>=7.3",
    "pytest-cov>=4",
    "ruff>=0.0.270",
    "sphinx>=7",
    "sphinx-autobuild>=2021.3",
    "sphinx-click>=4.4",
    "sphinx-copybutton>=0.5",
]

[project.urls]
repository = "{{ cookiecutter.repo_url }}"

[project.scripts]
{{ cookiecutter.project_slug }} = "{{ cookiecutter.project_slug }}.__main__:app"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.ruff]
select = [
    "B",   # bugbear
    "B9",  # bugbear's opinionated warnings
    "C",   # mccabe
    "C4",  # comprehensions
    "E",   # pycodestyle
    "F",   # pyflakes
    "G",   # logging-format
    "I",   # isort
    "PD",  # pandas-vet
    "PT",  # pytest-style
    "Q",   # quotes
    "RSE", # raise
    "S",   # bandit
    "SIM", # simplify
    "T10", # debugger
    "W",   # pycodestyle
]
src = ["src"]

[tool.ruff.per-file-ignores]
# bandit to ignore test assert statements
"tests/*" = ["S101"]
