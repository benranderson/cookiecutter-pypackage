[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
authors = [
    { name = "{{ cookiecutter.full_name }}", email = "{{ cookiecutter.email }}" },
]
description = "{{ cookiecutter.project_short_description }}"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "click==8.1.3",
    "numpy==1.23.5",
    "rich-click==1.6.1",
]

[project.optional-dependencies]
dev = [
    "black==23.3.0",
    "isort==5.12.0",
    "myst-parser==1.0.0",
    "nox==2022.11.21",
    "pre-commit==3.2.2",
    "pydata-sphinx-theme==0.13.3",
    "pytest==7.3.1",
    "pytest-cov==4.0.0",
    "ruff==0.0.261",
    "safety==2.3.5",
    "sphinx==6.1.3",
    "sphinx-autobuild==2021.3.14",
    "sphinx-click==4.4.0",
    "sphinx-copybutton==0.5.2",
]

[project.urls]
repository = "{{ cookiecutter.repo_url }}"

[project.scripts]
{{ cookiecutter.project_slug }} = "{{ cookiecutter.project_slug }}.__main__:app"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.ruff]
select = [
    "B",  # bugbear
    "B9",  # bugbear's opinionated warnings
    "C",  # mccabe
    "C4",  # comprehensions
    "E", # pycodestyle
    "F",  # pyflakes
    "G",  # logging-format
    "PD",  # pandas-vet
    "PT",  # pytest-style
    "Q",  # quotes
    "RSE",  # raise
    "S",  # bandit
    "SIM",  # simplify
    "T10",  # debugger
    "W", # pycodestyle
]

[tool.ruff.per-file-ignores]
# bandit to ignore test assert statements
"tests/*" = ["S101"]
